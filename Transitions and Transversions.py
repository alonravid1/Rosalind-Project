# -*- coding: utf-8 -*-
"""
Created on Thu Dec  2 11:52:22 2021

@author: Aputer

Rosalind Project ID: TRAN
"""

def find_ratio(s1, s2):
    #receives two strands of the same length, find the transition/transversion
    #ratio between them
    
    transitions = 0
    transversions = 0
    
    purines = {'A', 'G'}
    pyrimidines = {'C', 'T'}
    
    for i in range(len(s1)):
        c1 = s1[i] # compare 1, the base in the first strand to compare
        c2= s2[i] # compare 2, the base in the second strand to compare
        if(c1 != c2):
            
            if(c1 in purines and c2 in purines):
                transitions += 1
                continue
            
            elif(c1 in pyrimidines and c2 in pyrimidines):
                transitions +=1
                continue
            
            else:
                transversions += 1
                
    return(transitions/transversions)
        
s1 = """ACTTTCCTCTCGCGCGTCGCCTGCTTTGACCGCAAGGCCCACGTGAAACGCCTCACATCT
GTCTTCCCTACTCAATTAAAAGTCGGAGTTGCCGACAATATAGTGCCTACTTGGCGACCT
TTTGTTGTTTCGACACGTACTCTCGCCTCCGCCGCAGCGTGGACGACCTCGGAATAATGT
GCATGGCGTAGTCACAGAGGGGCTAAACAACATCGCGGCTGCGCAATGTGGCGTTATCAA
CGATCTCTTTCTCCTTGCCTCAACTGCCCAAGTTTATGCTTCACCTTTACGCAAGGGAAC
AGGATTTAGGAACTTCAAACAAACTCTTAAAAAGTGTCGGCAGCTCACTTCCGTGAAGCC
AGAGTGAGACGGTATATTGCCAATCGCCTCAGCATTGTAACTGCTCAGGCTATCGGCGGC
TGGCATGAGTGGACCACACATTGTCGGAGTGGGTGATGTTATCGGTCGCAACGCGAGCGG
CCTAACGGACACTAGCCGGTCTATGCCAGTGGCGCTGCCTTTTCTTGTGCCCTTACCGTG
TACTAAATGAGTCGACCTTCGTCCCTTCAAGGCGGAGTAACTGGCGAGCCATACGGGACC
GATCAGGGATAGTTAACCTATATGGGTATAACGAGACCCACGTTCGAGGGCATCCATGAC
CTGACCGTTACTTTCTCATGATTCGCTCGGACCACAGACACCCTACACGGGGCTATAAGT
AGATCTCGTAGTGTTAGTGCCGACACAACGGCGGACACCAAAGGGGATTGCACCTAGTTG
TTCCGCTTCAGAGCTGGATTGTAAGCCGAAGGCTTCAGGTGCAGGTGATGCCTGACGTTT
CGTTTGGTACGTCAACAT""".replace('\n', '')

s2 = """ATTTTCCTCCCGGGCGTTGCCCGCCTTAACCGTGAGATCCACCTGTAAGGTCTCACATCT
TCCCTCTCTACCTACTTAAGAGCTGGAGTGGTCAACGATAGGTTGCCGATTCGGCGACTT
TTCGTTGTCTCGGCGCCTGCCCTCACCGTCGGCATACCGTAGACGACCTCGGGATATTGT
GCACGGCAGGTTCACGGACGAGCTAAACAGGATCGCAGCTCCACAATTCAGTGCTATCAA
CGTTCCCATTCGCCTTGTCTCCACCGACTGAGCTCATGTTCCGTCTGTACGCGGGGGACG
AAGATTTAGGAACTTTAAATCAACTCTTCAAATTCGTGGGCGGCGTGACTCCACGGAGCC
AGAATAAGGCGGTGTCTCGCCATGCGTCTCAGTAAAGTTATCGCGCAGCCCATAGATGGA
GGGCAAAGGTGGTCCGTACACCGTCGGAATTAGTGTTATTGCCAGCCGCGATGCGAGCGG
CTAAACTAGCCCTCGCTGGCCTACGCTAGTGGCGCTGCCATTTCGCGCGGTTTCACCGTT
TACTACACGAATCGATTCTTGTCACCGCAAGACGGGGCAACTGGCGAGCTGTACGTGATC
AATCAGGGATAGTCGACTTATATAGATACAACGAGACCCACACTCAAGAACATCCTTAAA
TTGGCTATCATTCACTCATGATTCTCTCGGACCAAAGAAGCCCTGCACGGGGCTACGAGA
AGATCCCATTCTGGTGATGCTGGTCCCGCAGCTGATGCCCTATAAGATAGAACCTAGTCG
TTCGGTTTCAGGACTGGACTGTACGCCGAGGCCCTCAAGTGCAGGTGATACCTGACGCTT
CGTTTAATACGTTGACCT""".replace('\n', '')

print(find_ratio(s1,s2))
