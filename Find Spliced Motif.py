# -*- coding: utf-8 -*-
"""
Created on Tue Nov 30 19:29:04 2021

@author: Aputer

Rosling Project ID: SSEQ
"""

def find_spliced_motif(s, t):
    #receives strand s and strand t which is incontigously contained
    #in s, return a collection of indices where t appears in s in order
    #this problem refers to the start of string s as 1. 
    j = 0
    indices = []
    
    for i in range(len(s)):
        
        if(s[i] == t[j]):
        
            j += 1
            indices.append(i+1)
            
            if(j == len(t)):
                return(indices)
    
    raise Exception("t is not a subsequence of s")

s = """TGATTGAACTTTGTTGGATCCCTATAATTACCATACTTGATCATGTTTTTACCGATGGAC
CACATAATTAGGTTCAGTTAGCTGCGTCGCCCCCCTCCGAGTACGAGACTGTCGGTCGAA
CTATCCCACAAAAAGCGACTGATAAAAACCGGCCGTTACGAGTCAAGGCGCGTCGCGCTG
CCATTTCAATCGTTCTAGTAATCAGTCGCGACTCTCTGCTAGGCTACTCGCGTCAACAGA
ACTACCTACGTGCCCATTGTCTTCTAGGACGCTGAATCTTCCAGAATGGTTCCCTCCGCG
CCGTGAATGCCAACCTGTCCCATTTGCGTGTGAGGATACCACAGCGTAGGAGGACCTCGC
GGGTGTAATTAAATCCCAGGGTGCAACCAACCAAATATATACACATGCACCTCTGGCAGT
AAAGGTACGTTAGCAAGCATGTCACCTAACGCTCATTTGAGTCGTGGTACCACACACCAA
CATCTCGTATTGACGTGCTTTGGTGGCTGGCTACGATTGCTCATTTACTCCCACCGAAAA
TTGGTATATTCAAAAGGCCGGATGGTGGCGGCATTCCAGGTGGCCCTGAGCTCTTAATAC
TACCTCGGGGGTCAGATGCAATTCTTGCTCAATGCATTTCCGAATAAGCAAGTCTGCCAC
ATATTCGCCCGGAAAATGCTGCTTTAATCCCTTGAGTGAACCGGACTAGCGGTATACTAC
CGGGTGTTCAACTTAGACCGACGTCTGCACCCTATCTGTCGACACTAGTCGCCGACAGAC
CACTCGCTACTCAGACAGGAGCTACGTAGGACACAACCTTC""".replace('\n', '')

x = find_spliced_motif(s, """TTCCTGCGAAACGGAAC
                       ACTCACCTGGTGTGTTATATC""".replace('\n', ''))

print(str(x)[1:-1].replace(',', ''))

